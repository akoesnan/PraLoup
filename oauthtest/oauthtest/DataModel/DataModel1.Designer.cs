//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Model1", "UserUserEventInstance", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectSafari.DataModel.User), "UserEventInstance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectSafari.DataModel.UserEventInstance))]
[assembly: EdmRelationshipAttribute("Model1", "EventInstanceUserEventInstance", "EventInstance", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectSafari.DataModel.EventInstance), "UserEventInstance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectSafari.DataModel.UserEventInstance))]
[assembly: EdmRelationshipAttribute("Model1", "EventListingEventInstance", "EventListing", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectSafari.DataModel.EventListing), "EventInstance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectSafari.DataModel.EventInstance))]
[assembly: EdmRelationshipAttribute("Model1", "EventListingUserEventInstance", "EventListing", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectSafari.DataModel.EventListing), "UserEventInstance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectSafari.DataModel.UserEventInstance))]
[assembly: EdmRelationshipAttribute("Model1", "UserEventInstance1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectSafari.DataModel.User), "EventInstance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectSafari.DataModel.EventInstance))]

#endregion

namespace ProjectSafari.DataModel
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class Model1Container : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new Model1Container object using the connection string found in the 'Model1Container' section of the application configuration file.
        /// </summary>
        public Model1Container() : base("name=Model1Container", "Model1Container")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Model1Container object.
        /// </summary>
        public Model1Container(string connectionString) : base(connectionString, "Model1Container")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Model1Container object.
        /// </summary>
        public Model1Container(EntityConnection connection) : base(connection, "Model1Container")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventListing> EventListings
        {
            get
            {
                if ((_EventListings == null))
                {
                    _EventListings = base.CreateObjectSet<EventListing>("EventListings");
                }
                return _EventListings;
            }
        }
        private ObjectSet<EventListing> _EventListings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserEventInstance> UserEventInstances
        {
            get
            {
                if ((_UserEventInstances == null))
                {
                    _UserEventInstances = base.CreateObjectSet<UserEventInstance>("UserEventInstances");
                }
                return _UserEventInstances;
            }
        }
        private ObjectSet<UserEventInstance> _UserEventInstances;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventInstance> EventInstances
        {
            get
            {
                if ((_EventInstances == null))
                {
                    _EventInstances = base.CreateObjectSet<EventInstance>("EventInstances");
                }
                return _EventInstances;
            }
        }
        private ObjectSet<EventInstance> _EventInstances;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EventListings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventListings(EventListing eventListing)
        {
            base.AddObject("EventListings", eventListing);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserEventInstances EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserEventInstances(UserEventInstance userEventInstance)
        {
            base.AddObject("UserEventInstances", userEventInstance);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EventInstances EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventInstances(EventInstance eventInstance)
        {
            base.AddObject("EventInstances", eventInstance);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="EventInstance")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EventInstance : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EventInstance object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="creationDate">Initial value of the CreationDate property.</param>
        /// <param name="lastUpdate">Initial value of the LastUpdate property.</param>
        public static EventInstance CreateEventInstance(global::System.Int32 id, global::System.DateTime creationDate, global::System.DateTime lastUpdate)
        {
            EventInstance eventInstance = new EventInstance();
            eventInstance.Id = id;
            eventInstance.CreationDate = creationDate;
            eventInstance.LastUpdate = lastUpdate;
            return eventInstance;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdate
        {
            get
            {
                return _LastUpdate;
            }
            set
            {
                OnLastUpdateChanging(value);
                ReportPropertyChanging("LastUpdate");
                _LastUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdate");
                OnLastUpdateChanged();
            }
        }
        private global::System.DateTime _LastUpdate;
        partial void OnLastUpdateChanging(global::System.DateTime value);
        partial void OnLastUpdateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "EventInstanceUserEventInstance", "UserEventInstance")]
        public EntityCollection<UserEventInstance> UserEventInstances
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserEventInstance>("Model1.EventInstanceUserEventInstance", "UserEventInstance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserEventInstance>("Model1.EventInstanceUserEventInstance", "UserEventInstance", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "EventListingEventInstance", "EventListing")]
        public EventListing EventListing
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventListing>("Model1.EventListingEventInstance", "EventListing").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventListing>("Model1.EventListingEventInstance", "EventListing").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EventListing> EventListingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventListing>("Model1.EventListingEventInstance", "EventListing");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EventListing>("Model1.EventListingEventInstance", "EventListing", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "UserEventInstance1", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Model1.UserEventInstance1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Model1.UserEventInstance1", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Model1.UserEventInstance1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Model1.UserEventInstance1", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="EventListing")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EventListing : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EventListing object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="eventType">Initial value of the EventType property.</param>
        /// <param name="eventStartDate">Initial value of the EventStartDate property.</param>
        /// <param name="eventEndDate">Initial value of the EventEndDate property.</param>
        /// <param name="eventStartTime">Initial value of the EventStartTime property.</param>
        /// <param name="eventEndTime">Initial value of the EventEndTime property.</param>
        /// <param name="eventRecurrence">Initial value of the EventRecurrence property.</param>
        /// <param name="creationDate">Initial value of the CreationDate property.</param>
        /// <param name="lastUpdate">Initial value of the LastUpdate property.</param>
        public static EventListing CreateEventListing(global::System.Int32 id, global::System.String eventType, global::System.DateTime eventStartDate, global::System.DateTime eventEndDate, global::System.DateTime eventStartTime, global::System.DateTime eventEndTime, global::System.String eventRecurrence, global::System.DateTime creationDate, global::System.DateTime lastUpdate)
        {
            EventListing eventListing = new EventListing();
            eventListing.Id = id;
            eventListing.EventType = eventType;
            eventListing.EventStartDate = eventStartDate;
            eventListing.EventEndDate = eventEndDate;
            eventListing.EventStartTime = eventStartTime;
            eventListing.EventEndTime = eventEndTime;
            eventListing.EventRecurrence = eventRecurrence;
            eventListing.CreationDate = creationDate;
            eventListing.LastUpdate = lastUpdate;
            return eventListing;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EventType
        {
            get
            {
                return _EventType;
            }
            set
            {
                OnEventTypeChanging(value);
                ReportPropertyChanging("EventType");
                _EventType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EventType");
                OnEventTypeChanged();
            }
        }
        private global::System.String _EventType;
        partial void OnEventTypeChanging(global::System.String value);
        partial void OnEventTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EventStartDate
        {
            get
            {
                return _EventStartDate;
            }
            set
            {
                OnEventStartDateChanging(value);
                ReportPropertyChanging("EventStartDate");
                _EventStartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventStartDate");
                OnEventStartDateChanged();
            }
        }
        private global::System.DateTime _EventStartDate;
        partial void OnEventStartDateChanging(global::System.DateTime value);
        partial void OnEventStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EventEndDate
        {
            get
            {
                return _EventEndDate;
            }
            set
            {
                OnEventEndDateChanging(value);
                ReportPropertyChanging("EventEndDate");
                _EventEndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventEndDate");
                OnEventEndDateChanged();
            }
        }
        private global::System.DateTime _EventEndDate;
        partial void OnEventEndDateChanging(global::System.DateTime value);
        partial void OnEventEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EventStartTime
        {
            get
            {
                return _EventStartTime;
            }
            set
            {
                OnEventStartTimeChanging(value);
                ReportPropertyChanging("EventStartTime");
                _EventStartTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventStartTime");
                OnEventStartTimeChanged();
            }
        }
        private global::System.DateTime _EventStartTime;
        partial void OnEventStartTimeChanging(global::System.DateTime value);
        partial void OnEventStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EventEndTime
        {
            get
            {
                return _EventEndTime;
            }
            set
            {
                OnEventEndTimeChanging(value);
                ReportPropertyChanging("EventEndTime");
                _EventEndTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventEndTime");
                OnEventEndTimeChanged();
            }
        }
        private global::System.DateTime _EventEndTime;
        partial void OnEventEndTimeChanging(global::System.DateTime value);
        partial void OnEventEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EventRecurrence
        {
            get
            {
                return _EventRecurrence;
            }
            set
            {
                OnEventRecurrenceChanging(value);
                ReportPropertyChanging("EventRecurrence");
                _EventRecurrence = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EventRecurrence");
                OnEventRecurrenceChanged();
            }
        }
        private global::System.String _EventRecurrence;
        partial void OnEventRecurrenceChanging(global::System.String value);
        partial void OnEventRecurrenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdate
        {
            get
            {
                return _LastUpdate;
            }
            set
            {
                OnLastUpdateChanging(value);
                ReportPropertyChanging("LastUpdate");
                _LastUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdate");
                OnLastUpdateChanged();
            }
        }
        private global::System.DateTime _LastUpdate;
        partial void OnLastUpdateChanging(global::System.DateTime value);
        partial void OnLastUpdateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "EventListingEventInstance", "EventInstance")]
        public EntityCollection<EventInstance> EventInstances
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventInstance>("Model1.EventListingEventInstance", "EventInstance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventInstance>("Model1.EventListingEventInstance", "EventInstance", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "EventListingUserEventInstance", "UserEventInstance")]
        public EntityCollection<UserEventInstance> UserEventInstances
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserEventInstance>("Model1.EventListingUserEventInstance", "UserEventInstance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserEventInstance>("Model1.EventListingUserEventInstance", "UserEventInstance", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="creationDate">Initial value of the CreationDate property.</param>
        /// <param name="lastLoginDate">Initial value of the LastLoginDate property.</param>
        /// <param name="allowedToPostToWall">Initial value of the AllowedToPostToWall property.</param>
        public static User CreateUser(global::System.Int32 id, global::System.DateTime creationDate, global::System.DateTime lastLoginDate, global::System.String allowedToPostToWall)
        {
            User user = new User();
            user.Id = id;
            user.CreationDate = creationDate;
            user.LastLoginDate = lastLoginDate;
            user.AllowedToPostToWall = allowedToPostToWall;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastLoginDate
        {
            get
            {
                return _LastLoginDate;
            }
            set
            {
                OnLastLoginDateChanging(value);
                ReportPropertyChanging("LastLoginDate");
                _LastLoginDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLoginDate");
                OnLastLoginDateChanged();
            }
        }
        private global::System.DateTime _LastLoginDate;
        partial void OnLastLoginDateChanging(global::System.DateTime value);
        partial void OnLastLoginDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AllowedToPostToWall
        {
            get
            {
                return _AllowedToPostToWall;
            }
            set
            {
                OnAllowedToPostToWallChanging(value);
                ReportPropertyChanging("AllowedToPostToWall");
                _AllowedToPostToWall = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AllowedToPostToWall");
                OnAllowedToPostToWallChanged();
            }
        }
        private global::System.String _AllowedToPostToWall;
        partial void OnAllowedToPostToWallChanging(global::System.String value);
        partial void OnAllowedToPostToWallChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "UserUserEventInstance", "UserEventInstance")]
        public EntityCollection<UserEventInstance> UserEventInstances
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserEventInstance>("Model1.UserUserEventInstance", "UserEventInstance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserEventInstance>("Model1.UserUserEventInstance", "UserEventInstance", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "UserEventInstance1", "EventInstance")]
        public EntityCollection<EventInstance> EventInstances
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventInstance>("Model1.UserEventInstance1", "EventInstance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventInstance>("Model1.UserEventInstance1", "EventInstance", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="UserEventInstance")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserEventInstance : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserEventInstance object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="creationDate">Initial value of the CreationDate property.</param>
        /// <param name="lastUpdate">Initial value of the LastUpdate property.</param>
        public static UserEventInstance CreateUserEventInstance(global::System.Int32 id, global::System.String status, global::System.DateTime creationDate, global::System.DateTime lastUpdate)
        {
            UserEventInstance userEventInstance = new UserEventInstance();
            userEventInstance.Id = id;
            userEventInstance.Status = status;
            userEventInstance.CreationDate = creationDate;
            userEventInstance.LastUpdate = lastUpdate;
            return userEventInstance;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdate
        {
            get
            {
                return _LastUpdate;
            }
            set
            {
                OnLastUpdateChanging(value);
                ReportPropertyChanging("LastUpdate");
                _LastUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdate");
                OnLastUpdateChanged();
            }
        }
        private global::System.DateTime _LastUpdate;
        partial void OnLastUpdateChanging(global::System.DateTime value);
        partial void OnLastUpdateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "UserUserEventInstance", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Model1.UserUserEventInstance", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Model1.UserUserEventInstance", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Model1.UserUserEventInstance", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Model1.UserUserEventInstance", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "EventInstanceUserEventInstance", "EventInstance")]
        public EventInstance EventInstance
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventInstance>("Model1.EventInstanceUserEventInstance", "EventInstance").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventInstance>("Model1.EventInstanceUserEventInstance", "EventInstance").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EventInstance> EventInstanceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventInstance>("Model1.EventInstanceUserEventInstance", "EventInstance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EventInstance>("Model1.EventInstanceUserEventInstance", "EventInstance", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "EventListingUserEventInstance", "EventListing")]
        public EventListing EventListing
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventListing>("Model1.EventListingUserEventInstance", "EventListing").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventListing>("Model1.EventListingUserEventInstance", "EventListing").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EventListing> EventListingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventListing>("Model1.EventListingUserEventInstance", "EventListing");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EventListing>("Model1.EventListingUserEventInstance", "EventListing", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
